{
  // Default options
  'functions': true
}

{{! Add note to the less file. }}

/**********************************************************
*
*	THIS FILE IS AUTOGENERATED. DO NOT EDIT.
*	RUN `gulp sprite` TO REGENERATE.
*
**********************************************************/

@sprite-total-width: {{items.0.px.total_width}};
@sprite-total-height: {{items.0.px.total_height}};
@sprite-image-path: "{{{items.0.escaped_image}}}";
@sprite-image-path-retina: replace(@sprite-image-path, "@1x", "@2x");

{{#items}}
// {{name}}
@{{name}}-x: {{px.x}};
@{{name}}-y: {{px.y}};
@{{name}}-offset-x: {{px.offset_x}};
@{{name}}-offset-y: {{px.offset_y}};
@{{name}}-width: {{px.width}} / 2;
@{{name}}-height: {{px.height}} / 2;
@{{name}}-total-width: {{px.total_width}};
@{{name}}-total-height: {{px.total_height}};
@{{name}}-image: '{{{escaped_image}}}';
@{{name}}: {{px.x}} {{px.y}} {{px.offset_x}} {{px.offset_y}} {{px.width}} {{px.height}} {{px.total_width}} {{px.total_height}} '{{{escaped_image}}}';

{{/items}}

{{#options.functions}}

.sprite-width(@sprite)
{
	width: ~`"@{sprite}".split(', ')[4]`;
}

.sprite-height(@sprite)
{
	height: ~`"@{sprite}".split(', ')[5]`;
}

.sprite-position(@sprite)
{
	@sprite-offset-x: ~`"@{sprite}".split(', ')[2]`;
	@sprite-offset-y: ~`"@{sprite}".split(', ')[3]`;
	background-position: @sprite-offset-x  @sprite-offset-y;

	@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)
	{
		background-size: @sprite-total-width @sprite-total-height;
	}
}

.sprite-image(@sprite)
{
	{{! DEV: We perform a slice due to a trailing brace from string coercion of arrays }}
	@sprite-image: ~`"@{sprite}".split(', ')[8].slice(1, -2)`;
	background-image: url(@sprite-image);

	@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)
	{
		background-image: url(@sprite-image-path-retina);
	}
}

.sprite(@sprite)
{
	.sprite-image(@sprite);
	.sprite-position(@sprite);
	.sprite-width(@sprite);
	.sprite-height(@sprite);
}

{{/options.functions}}
